{
  "hash": "2c0da97b58af0c9e7e8c6c78c4b4d5e2",
  "result": {
    "engine": "jupyter",
    "markdown": "# 금융공학프로그래밍3, Quiz5 {.unnumbered}\n\n## Problem 1\n\n1. Create a 2-dimensional ndarray object 'Arr' with the code below and answer the following.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nnp.random.seed(123)\nArr=np.random.randn(8,10)\n```\n:::\n\n\n(1) Write an expression to calculate column sum of Arr.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nnp.sum(Arr,axis=0)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\narray([-3.68648899, -3.20797062,  1.89628963, -4.31697028, -1.68652947,\n        3.31014718,  3.61439765,  2.82609217,  1.68894737,  0.84241575])\n```\n:::\n:::\n\n\n(2) Write an expression that finds the position (row and column index) of an element greater than 2 in Arr\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nnp.where(Arr>2)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n(array([1, 1, 4, 4]), array([6, 7, 6, 9]))\n```\n:::\n:::\n\n\n## Problem 2\n\n2. Write 3 different expressions to create a pandas Series object 'S' displayed as follows.\n\n    \\>>> S\n\n    a 0\n\n    b 1\n\n    c 2\n\n    d 3\n\n    dtype: int64\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nimport pandas as pd\nS=pd.Series([0,1,2,3],index=['a','b','c','d'])\nS\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\na    0\nb    1\nc    2\nd    3\ndtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nS=pd.Series(dict(a=0,b=1,c=2,d=3))\nS\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\na    0\nb    1\nc    2\nd    3\ndtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nS=pd.Series(np.arange(4),index=['a','b','c','d'])\nS\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\na    0\nb    1\nc    2\nd    3\ndtype: int64\n```\n:::\n:::\n\n\n## Problem 3\n\n3. Write 4 different expressions to select the 2nd and the 3rd elements of Snew.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nSnew = pd.Series({'a': 1, 'b':4, 'c':2, 'd':3} )\n```\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nSnew[1:3]\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\nb    4\nc    2\ndtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nSnew.iloc[[1,2]]\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nb    4\nc    2\ndtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nSnew['b':'c']\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\nb    4\nc    2\ndtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nSnew[['b','c']]\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\nb    4\nc    2\ndtype: int64\n```\n:::\n:::\n\n\n## Problem 4~5\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nnp.random.seed(123)\nDF = pd.DataFrame(np.random.randn(6,7),\n                  columns=list('abcdefg'),\n                  index=[3,2,4,5,1,0])\nDF\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>e</th>\n      <th>f</th>\n      <th>g</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3</th>\n      <td>-1.085631</td>\n      <td>0.997345</td>\n      <td>0.282978</td>\n      <td>-1.506295</td>\n      <td>-0.578600</td>\n      <td>1.651437</td>\n      <td>-2.426679</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-0.428913</td>\n      <td>1.265936</td>\n      <td>-0.866740</td>\n      <td>-0.678886</td>\n      <td>-0.094709</td>\n      <td>1.491390</td>\n      <td>-0.638902</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>-0.443982</td>\n      <td>-0.434351</td>\n      <td>2.205930</td>\n      <td>2.186786</td>\n      <td>1.004054</td>\n      <td>0.386186</td>\n      <td>0.737369</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1.490732</td>\n      <td>-0.935834</td>\n      <td>1.175829</td>\n      <td>-1.253881</td>\n      <td>-0.637752</td>\n      <td>0.907105</td>\n      <td>-1.428681</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>-0.140069</td>\n      <td>-0.861755</td>\n      <td>-0.255619</td>\n      <td>-2.798589</td>\n      <td>-1.771533</td>\n      <td>-0.699877</td>\n      <td>0.927462</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>-0.173636</td>\n      <td>0.002846</td>\n      <td>0.688223</td>\n      <td>-0.879536</td>\n      <td>0.283627</td>\n      <td>-0.805367</td>\n      <td>-1.727669</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n4. Fill in the appropriate expression in square brackets so you can select columns 'c' and 'e'.\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nDF.iloc[:,2:5:2]\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>c</th>\n      <th>e</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3</th>\n      <td>0.282978</td>\n      <td>-0.578600</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-0.866740</td>\n      <td>-0.094709</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2.205930</td>\n      <td>1.004054</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1.175829</td>\n      <td>-0.637752</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>-0.255619</td>\n      <td>-1.771533</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>0.688223</td>\n      <td>0.283627</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\nDF[['c','e']]\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>c</th>\n      <th>e</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3</th>\n      <td>0.282978</td>\n      <td>-0.578600</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-0.866740</td>\n      <td>-0.094709</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2.205930</td>\n      <td>1.004054</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1.175829</td>\n      <td>-0.637752</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>-0.255619</td>\n      <td>-1.771533</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>0.688223</td>\n      <td>0.283627</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n5. Fill in the appropriate expression in square brackets so that you can select rows with negative values for column 'c'.\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nDF.loc[DF.c<0,:]\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>e</th>\n      <th>f</th>\n      <th>g</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>-0.428913</td>\n      <td>1.265936</td>\n      <td>-0.866740</td>\n      <td>-0.678886</td>\n      <td>-0.094709</td>\n      <td>1.491390</td>\n      <td>-0.638902</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>-0.140069</td>\n      <td>-0.861755</td>\n      <td>-0.255619</td>\n      <td>-2.798589</td>\n      <td>-1.771533</td>\n      <td>-0.699877</td>\n      <td>0.927462</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\nDF[DF.c<0]\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>e</th>\n      <th>f</th>\n      <th>g</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>-0.428913</td>\n      <td>1.265936</td>\n      <td>-0.866740</td>\n      <td>-0.678886</td>\n      <td>-0.094709</td>\n      <td>1.491390</td>\n      <td>-0.638902</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>-0.140069</td>\n      <td>-0.861755</td>\n      <td>-0.255619</td>\n      <td>-2.798589</td>\n      <td>-1.771533</td>\n      <td>-0.699877</td>\n      <td>0.927462</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "Python Quiz5_files/figure-pdf"
    ],
    "filters": []
  }
}